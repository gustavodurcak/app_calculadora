{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createStd } from '../../function/statistics/std.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'std';\nvar dependencies = ['typed', 'map', 'sqrt', 'variance'];\n/**\n * Attach a transform function to math.std\n * Adds a property transform containing the transform function.\n *\n * This transform changed the `dim` parameter of function std\n * from one-based to zero based\n */\n\nexport var createStdTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    map,\n    sqrt,\n    variance\n  } = _ref;\n  var std = createStd({\n    typed,\n    map,\n    sqrt,\n    variance\n  });\n  return typed('std', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return std.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"names":["factory","createStd","errorTransform","lastDimToZeroBase","name","dependencies","createStdTransform","_ref","typed","map","sqrt","variance","std","any","args","apply","err","isTransformFunction"],"sources":["/Users/gustavodurcak/node_modules/mathjs/lib/esm/expression/transform/std.transform.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { createStd } from '../../function/statistics/std.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'std';\nvar dependencies = ['typed', 'map', 'sqrt', 'variance'];\n/**\n * Attach a transform function to math.std\n * Adds a property transform containing the transform function.\n *\n * This transform changed the `dim` parameter of function std\n * from one-based to zero based\n */\n\nexport var createStdTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    map,\n    sqrt,\n    variance\n  } = _ref;\n  var std = createStd({\n    typed,\n    map,\n    sqrt,\n    variance\n  });\n  return typed('std', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return std.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,EAAyB,UAAzB,CAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAqBE,IAAI,IAAI;EACjF,IAAI;IACFC,KADE;IAEFC,GAFE;IAGFC,IAHE;IAIFC;EAJE,IAKAJ,IALJ;EAMA,IAAIK,GAAG,GAAGX,SAAS,CAAC;IAClBO,KADkB;IAElBC,GAFkB;IAGlBC,IAHkB;IAIlBC;EAJkB,CAAD,CAAnB;EAMA,OAAOH,KAAK,CAAC,KAAD,EAAQ;IAClB,UAAU,SAASK,GAAT,CAAaC,IAAb,EAAmB;MAC3BA,IAAI,GAAGX,iBAAiB,CAACW,IAAD,CAAxB;;MAEA,IAAI;QACF,OAAOF,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgBD,IAAhB,CAAP;MACD,CAFD,CAEE,OAAOE,GAAP,EAAY;QACZ,MAAMd,cAAc,CAACc,GAAD,CAApB;MACD;IACF;EATiB,CAAR,CAAZ;AAWD,CAxBqD,EAwBnD;EACDC,mBAAmB,EAAE;AADpB,CAxBmD,CAA/C"},"metadata":{},"sourceType":"module"}