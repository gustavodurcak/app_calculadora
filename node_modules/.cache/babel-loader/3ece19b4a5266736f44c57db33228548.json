{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createMatAlgo12xSfs } from '../../type/matrix/utils/matAlgo12xSfs.js';\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor', 'equalScalar', 'zeros', 'DenseMatrix'];\nexport var createFixNumber = /* #__PURE__ */factory(name, ['typed', 'ceil', 'floor'], _ref => {\n  var {\n    typed,\n    ceil,\n    floor\n  } = _ref;\n  return typed(name, {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number': function numberNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    }\n  });\n});\nexport var createFix = /* #__PURE__ */factory(name, dependencies, _ref2 => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor,\n    equalScalar,\n    zeros,\n    DenseMatrix\n  } = _ref2;\n  var matAlgo12xSfs = createMatAlgo12xSfs({\n    typed,\n    DenseMatrix\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed\n  });\n  var fixNumber = createFixNumber({\n    typed,\n    ceil,\n    floor\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *    math.fix(x,n)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 -2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n\n  return typed('fix', {\n    number: fixNumber.signatures.number,\n    'number, number | BigNumber': fixNumber.signatures['number,number'],\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, bn) {\n      var n = bn.toNumber();\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? ceil(x, n) : floor(x, n);\n    },\n    'Array | Matrix': typed.referToSelf(self => x => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, self, true);\n    }),\n    'Array | Matrix, number | BigNumber': typed.referToSelf(self => (x, n) => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, i => self(i, n), true);\n    }),\n    'number | Complex | Fraction | BigNumber, Array': typed.referToSelf(self => (x, y) => {\n      // use matrix implementation\n      return matAlgo14xDs(matrix(y), x, self, true).valueOf();\n    }),\n    'number | Complex | Fraction | BigNumber, Matrix': typed.referToSelf(self => (x, y) => {\n      if (equalScalar(x, 0)) return zeros(y.size(), y.storage());\n\n      if (y.storage() === 'dense') {\n        return matAlgo14xDs(y, x, self, true);\n      }\n\n      return matAlgo12xSfs(y, x, self, true);\n    })\n  });\n});","map":{"version":3,"names":["factory","deepMap","createMatAlgo12xSfs","createMatAlgo14xDs","name","dependencies","createFixNumber","_ref","typed","ceil","floor","number","x","numberNumber","n","createFix","_ref2","Complex","_Complex","matrix","equalScalar","zeros","DenseMatrix","matAlgo12xSfs","matAlgo14xDs","fixNumber","signatures","re","Math","im","ComplexNumber","ComplexBigNumber","bn","toNumber","BigNumber","isNegative","BigNumberNumberBigNumber","Fraction","s","FractionNumberBigNumber","referToSelf","self","i","y","valueOf","size","storage"],"sources":["/Users/gustavodurcak/node_modules/mathjs/lib/esm/function/arithmetic/fix.js"],"sourcesContent":["import { factory } from '../../utils/factory.js';\nimport { deepMap } from '../../utils/collection.js';\nimport { createMatAlgo12xSfs } from '../../type/matrix/utils/matAlgo12xSfs.js';\nimport { createMatAlgo14xDs } from '../../type/matrix/utils/matAlgo14xDs.js';\nvar name = 'fix';\nvar dependencies = ['typed', 'Complex', 'matrix', 'ceil', 'floor', 'equalScalar', 'zeros', 'DenseMatrix'];\nexport var createFixNumber = /* #__PURE__ */factory(name, ['typed', 'ceil', 'floor'], _ref => {\n  var {\n    typed,\n    ceil,\n    floor\n  } = _ref;\n  return typed(name, {\n    number: function number(x) {\n      return x > 0 ? floor(x) : ceil(x);\n    },\n    'number, number': function numberNumber(x, n) {\n      return x > 0 ? floor(x, n) : ceil(x, n);\n    }\n  });\n});\nexport var createFix = /* #__PURE__ */factory(name, dependencies, _ref2 => {\n  var {\n    typed,\n    Complex: _Complex,\n    matrix,\n    ceil,\n    floor,\n    equalScalar,\n    zeros,\n    DenseMatrix\n  } = _ref2;\n  var matAlgo12xSfs = createMatAlgo12xSfs({\n    typed,\n    DenseMatrix\n  });\n  var matAlgo14xDs = createMatAlgo14xDs({\n    typed\n  });\n  var fixNumber = createFixNumber({\n    typed,\n    ceil,\n    floor\n  });\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *    math.fix(x,n)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2)                // returns number 3\n   *    math.fix(3.8)                // returns number 3\n   *    math.fix(-4.2)               // returns number -4\n   *    math.fix(-4.7)               // returns number -4\n   *\n   *    math.fix(3.12, 1)                // returns number 3.1\n   *    math.fix(3.18, 1)                // returns number 3.1\n   *    math.fix(-4.12, 1)               // returns number -4.1\n   *    math.fix(-4.17, 1)               // returns number -4.1\n   *\n   *    const c = math.complex(3.22, -2.78)\n   *    math.fix(c)                  // returns Complex 3 - 2i\n   *    math.fix(c, 1)               // returns Complex 3.2 -2.7i\n   *\n   *    math.fix([3.2, 3.8, -4.7])      // returns Array [3, 3, -4]\n   *    math.fix([3.2, 3.8, -4.7], 1)   // returns Array [3.2, 3.8, -4.7]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x    Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                             Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix}     Rounded value\n   */\n\n  return typed('fix', {\n    number: fixNumber.signatures.number,\n    'number, number | BigNumber': fixNumber.signatures['number,number'],\n    Complex: function Complex(x) {\n      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, bn) {\n      var n = bn.toNumber();\n      return new _Complex(x.re > 0 ? floor(x.re, n) : ceil(x.re, n), x.im > 0 ? floor(x.im, n) : ceil(x.im, n));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.isNegative() ? ceil(x) : floor(x);\n    },\n    'BigNumber, number | BigNumber': function BigNumberNumberBigNumber(x, n) {\n      return x.isNegative() ? ceil(x, n) : floor(x, n);\n    },\n    Fraction: function Fraction(x) {\n      return x.s < 0 ? x.ceil() : x.floor();\n    },\n    'Fraction, number | BigNumber': function FractionNumberBigNumber(x, n) {\n      return x.s < 0 ? ceil(x, n) : floor(x, n);\n    },\n    'Array | Matrix': typed.referToSelf(self => x => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, self, true);\n    }),\n    'Array | Matrix, number | BigNumber': typed.referToSelf(self => (x, n) => {\n      // deep map collection, skip zeros since fix(0) = 0\n      return deepMap(x, i => self(i, n), true);\n    }),\n    'number | Complex | Fraction | BigNumber, Array': typed.referToSelf(self => (x, y) => {\n      // use matrix implementation\n      return matAlgo14xDs(matrix(y), x, self, true).valueOf();\n    }),\n    'number | Complex | Fraction | BigNumber, Matrix': typed.referToSelf(self => (x, y) => {\n      if (equalScalar(x, 0)) return zeros(y.size(), y.storage());\n\n      if (y.storage() === 'dense') {\n        return matAlgo14xDs(y, x, self, true);\n      }\n\n      return matAlgo12xSfs(y, x, self, true);\n    })\n  });\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}